{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3022",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "scheme": "bearer",
      "name": "Authorization",
      "bearerFormat": "JWT",
      "description": "Please insert JWT format!"
    }
  },
  "paths": {
    "/api/v1/auth/signup": {
      "post": {
        "tags": [
          "Master Role"
        ],
        "summary": "role user",
        "description": "every user has role for access",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Create role",
            "schema": {
              "$ref": "#/definitions/BodyAuthRegisterSchema"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/signin": {
      "post": {
        "tags": [
          "Master Role"
        ],
        "summary": "role user",
        "description": "every user has role for access",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Create role",
            "schema": {
              "$ref": "#/definitions/BodyAuthLoginSchema"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/forgot": {
      "put": {
        "tags": [
          "Master Role"
        ],
        "summary": "role user",
        "description": "every user has role for access",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Create role",
            "schema": {
              "$ref": "#/definitions/BodyAuthForgotSchema"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/ref-parameter/": {
      "get": {
        "tags": [
          "REF PARAMETER"
        ],
        "summary": "ref parameter",
        "description": "untuk referensi group",
        "parameters": [
          {
            "name": "type",
            "default": "cashflow_type",
            "description": "Search by type",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "REF PARAMETER"
        ],
        "summary": "ref parameter",
        "description": "untuk referensi group",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Create role",
            "schema": {
              "$ref": "#/definitions/BodyRefParameterSchema"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/ref-parameter/{id}": {
      "put": {
        "tags": [
          "REF PARAMETER"
        ],
        "summary": "ref parameter",
        "description": "untuk referensi group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Create role",
            "schema": {
              "$ref": "#/definitions/BodyRefParameterSchema"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "REF PARAMETER"
        ],
        "summary": "ref parameter",
        "description": "untuk referensi group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "BodyAuthRegisterSchema": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "john doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "BodyAuthLoginSchema": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john.doe@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "BodyAuthForgotSchema": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john.doe@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "confirmPassword": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "BodyRefParameterSchema": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "example": "income"
        },
        "type": {
          "type": "string",
          "example": "cashflow_type"
        },
        "description": {
          "type": "string",
          "example": "pemasukan anda"
        }
      }
    },
    "NotFound": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 404
        },
        "status": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "Data not found!"
        },
        "data": {
          "type": "string",
          "example": ""
        }
      }
    },
    "QueryIdSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": ""
        }
      }
    }
  }
}